#!/usr/bin/env bash

JAVA_8_HOME=/shared/common/jdk1.8.0_x64-latest
# On build.eclipse.org, JAVA_HOME is defined to Java 5!? So we need 
# to make sure it is re-assigned and exported here. 
export JAVA_HOME=${JAVA_8_HOME} 
export JAVA_EXEC_DIR=${JAVA_HOME}/bin
export JAVA_CMD=${JAVA_EXEC_DIR}/java

function findEclipseExe ()
{

  BUILD_ID=$1

  if [[ -z "${BUILD_ID}" ]]
  then
    echo "ERROR: this script, $BASH_SOURCE, requires BUILD_ID" >>${TRACE_LOG}
    return 1
  fi

  if [[ -z "${BUILD_ROOT}" ]]
  then
    echo -e "\n\tERROR: BUILT_ROOT not defined, as it should be."
  fi
  basebuilderParent=${BUILD_ROOT}/siteDir/eclipse/downloads/drops4/${BUILD_ID}
  if [[ ! -d "${basebuilderParent}" ]]
  then
    echo "ERROR: The directory did not exist. Must name existing directory where basebuilder is, or will be installed." >>${TRACE_LOG}
    echo "    basebuilderParent: ${basebuilderParent}" >>${TRACE_LOG}
    return 1
  fi

  baseBuilderDir=${basebuilderParent}/org.eclipse.releng.basebuilder
  if [[ ! -d "${baseBuilderDir}" ]]
  then
    echo -e "\n\tWARNING: The basebuilder directory " >>${TRACE_LOG}
    echo -e "\t${baseBuilderDir}" >>${TRACE_LOG}
    echo -e "\tdid not exist as expected. Will re-create.\n" >>${TRACE_LOG}

    EBuilder="${WORKSPACE}/gitCache/eclipse.platform.releng.aggregator/eclipse.platform.releng.tychoeclipsebuilder"
    # make sure that build repo still exists
    if [[ ! -d ${EBuilder} ]]
    then
      echo "ERROR: the EBuilder directory no longer exists. Can no re-create automatically" >>${TRACE_LOG}
      return 1
    fi

    # BUILD_ROOT should exist, by now, and have some value such as 
    # export BUILD_ROOT=/shared/eclipse/builds/4M
    # but, in case not, we'll assume a more generic location.
    export BUILD_ROOT=${BUILD_ROOT:-/shared/eclipse}
    export TMP_DIR=${TMP_DIR:-${BUILD_ROOT}/tmp} 
    mkdir -p "${TMP_DIR}"
    # assume suitable ant in on path
    ant -f ${EBuilder}/eclipse/getBaseBuilderAndTools.xml -DWORKSPACE=${basebuilderParent}
    if [[ "$?" != 0 ]]
    then
      echo "ERROR: Ant failed while executing getBaseBuilderAndTools.xml" >>${TRACE_LOG}
      return 1
    fi
    if [[ ! -d "${baseBuilderDir}" ]]
    then
      echo -e "\n\tERROR: The basebuilder directory, "   >>${TRACE_LOG}
      echo -e "\t${baseBuilderDir}"  >>${TRACE_LOG}
      echo -e "\twas not re-created.\n" >>${TRACE_LOG}
      return 1
    fi
  fi

  export ECLIPSE_EXE=$baseBuilderDir/eclipse
  echo -e "\n\tDEBUG: ECLIPSE_EXE: ${ECLIPSE_EXE}" >>${TRACE_LOG}

  if [[ -x ${ECLIPSE_EXE} ]]
  then
    echo -e "\n\tFound Eclipse executable: ${ECLIPSE_EXE}" >>${TRACE_LOG}
  else
    # TODO: This logic is not quite right. We may have gotten here because 
    # ECLIPSE_ECE did not exist at all.
    echo "ERROR: ECLIPSE_EXE is not defined to an executable eclipse" >>${TRACE_LOG}
    # bit of a hack to make executable, when it should be already!?
    chmod -c +x ${ECLIPSE_EXE}
    # may have in include *.so?
  fi

  return 0
}
